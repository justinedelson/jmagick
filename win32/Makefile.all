#
# -- See update notes below -->
#
# This makefile only compiles the C files and the generated
# jni stub and headrer files and produces a DLL.
#
#
# Hint: To be placed in .../src and invoked from there,
#       nmake -f Makefile.all

# From the Visual Studio .NET 2003 Command Prompt:
#    copy Makefile.all ..\src
#    cd ..\src
#    nmake -f Makefile.all
#
# Author: IT
# Date:   Oct 2000
# $Id: Makefile.all,v 1.3 2007/02/12 07:22:06 ttey Exp $
#
# -- Updated for Win32 instance, EMXOREN Apr 09, 2002 -->
# -- For runtime convenience copy '*.dll', '*.jar' as necessary.
# -- Copy the 'jmagick.dll' to MAGICK_HOME (e.g. 'MAGICBIN' below).
# -- Copy the 'jmagick.jar' to JRE's 'lib/ext'.
# -- Just always rebuilt ALL, it's fast and somewhat fixed anyway!
# -- Run 'javac', 'jar', 'javah' respectively prior to 'cl', 'link'.
# -- Disabled warnings as it was kind of noisy.
# -- Setup VC++ environment "path" for 'cl', 'link' and 'lib'.
# -- Created manually 'obj\magick', 'lib' place holders.
# -- Created manually 'classes', 'generated', 'docs' place holders.
# changed by Sava Slijepcevic
#
# Author: KLS
# Date:   Jan 2007
# $Id: Makefile.all,v 1.3 2007/02/12 07:22:06 ttey Exp $
#
# Updated Makefile for Visual Studio .NET 2003, JDK1.6 (Java 6), and
# added missing targets from the current JMagick.  JMagick is also
# rumored to be buildable using gcc/MinGW, but this Makefile does not
# target that compiler; instead I suppose you use MSYS or Cygwin and
# the configure script.
#
#
# Author: Jacob Nordfalk
# Date:   Feb 2008
#
# Added comments and mkdir commands to make sure make doesent fail 
# becaurse of missing intermediary or output directories.
# added invocation of Manifest Tool (mt.exe) and javac -target 1.5

CPP=cl.exe
LINK32=link.exe

# The C compiler
#CPPINC=c:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\Include
#CPPLIB=c:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\Lib
CPPINC=C:\Program Files\Microsoft Visual Studio 8\VC\include
CPPLIB=C:\Program Files\Microsoft Visual Studio 8\VC\Lib

OUTDIR=..\lib
INTDIR=..\obj\magick
SRCDIR=..\src\magick
GENDIR=..\generated
CLSDIR=..\classes
DOCDIR=..\doc

# File places for Java:
JDKDIR=C:\Program Files\Java\jdk1.6.0_01
JNIINC=$(JDKDIR)\include
JDKBIN=$(JDKDIR)\bin

# File places for standard ImageMagick:
MAGICKDIR=C:\Program Files\ImageMagick-6.3.6-Q8
MAGICKINC=$(MAGICKDIR)
MAGICKLIB=$(MAGICKDIR)\lib\CORE_RL_magick_.lib
MAGICKINCDIR=$(MAGICKDIR)\include

# If you compile IM yourself this might be better
#MAGICKDIR=C:\Jacob\IM\c_kompilering\beta\bin
#MAGICKINC=C:\Jacob\IM\c_kompilering\beta\ImageMagick
#MAGICKLIB=C:\Jacob\IM\c_kompilering\beta\lib\CORE_RL_magick_.lib
#MAGICKINCDIR=$(MAGICKDIR)


# The jmagick.jar file will be installed here:
JREEXT=$(JDKDIR)\lib\ext
#JREEXT=$(MAGICKDIR)


# The jmagick.dll file will be installed here:
MAGICKBIN=$(MAGICKDIR)

# Debugging, no optimizing and stack checks are required.
# It hangs otherwise (re: IT) !?

CPP_FLAGS= \
#    /nologo /MTd /w /GX /Od /Ge /Fo"$(INTDIR)\\" /c \
    /nologo /MD /w /GX /Od /Ge /Fo"$(INTDIR)\\" /c \
    /D "WIN32" /D "NDEBUG" /D "_WINDOWS" /D "_MBCS" /D "_USRDLL" \
    /D "JMAGICK_EXPORTS"  /D "_VISUALC_" /I "$(CPPINC)" \
    /I "$(JNIINC)" /I "$(JNIINC)/win32" /I "$(MAGICKINC)" \
    /I "$(GENDIR)" /I "$(SRCDIR)" /I "$(MAGICKINCDIR)"

LINK32_FLAGS= \
    "$(MAGICKLIB)" \
#    /nologo /dll /incremental:no /machine:I386 \
    /nologo /dll /incremental:no /machine:x86 \
    /libpath:"$(CPPLIB)" \
    /out:"$(OUTDIR)\jmagick.dll" \
    /implib:"$(OUTDIR)\jmagick.lib"

LINK32_OBJS= \
    "$(INTDIR)\jmagick.obj"    \
    "$(INTDIR)\magick_Magick.obj" \
    "$(INTDIR)\magick_MontageInfo.obj" \
    "$(INTDIR)\magick_DrawInfo.obj"     \
    "$(INTDIR)\magick_ImageInfo.obj"    \
    "$(INTDIR)\magick_MagickImage.obj"  \
    "$(INTDIR)\magick_MagickInfo.obj"	\
    "$(INTDIR)\magick_PixelPacket.obj"  \
    "$(INTDIR)\magick_QuantizeInfo.obj"

LINK32_OBJSD="$(INTDIR)\jmagick.obj" \
"$(INTDIR)\Magick_DrawInfo.obj"     \
"$(INTDIR)\Magick_ImageInfo.obj"    \
"$(INTDIR)\Magick_MagickImage.obj"  \
"$(INTDIR)\Magick_MagickInfo.obj"  \
"$(INTDIR)\Magick_MontageInfo.obj"  \
"$(INTDIR)\Magick_Magick.obj" \
"$(INTDIR)\Magick_PixelPacket.obj"  \
"$(INTDIR)\Magick_QuantizeInfo.obj"

ALL : CLEAN BUILD

BUILD : DIRS CLASSES DOCS HEADERS \
    "$(OUTDIR)\jmagick.dll" "$(MAGICKBIN))\jmagick.dll"


jmagick.obj: "$(SRCDIR)\jmagick.c"
    $(CPP) $(CPP_PROJ) $?

magick_DrawInfo.obj: "$(SRCDIR)\magick_DrawInfo.c"
    $(CPP) $(CPP_PROJ) $?

magick_ImageInfo.obj: "$(SRCDIR)\magick_ImageInfo.c"
    $(CPP) $(CPP_PROJ) $?

magick_Magick.obj: "$(SRCDIR)\magick_Magick.c"
    $(CPP) $(CPP_PROJ) $?

magick_MagickImage.obj: "$(SRCDIR)\magick_MagickImage.c"
    $(CPP) $(CPP_PROJ) $?

magick_MagickInfo.obj: "$(SRCDIR)\magick_MagickInfo.c"
    $(CPP) $(CPP_PROJ) $?

magick_MontageInfo.obj: "$(SRCDIR)\magick_MontageInfo.c"
    $(CPP) $(CPP_PROJ) $?

magick_PixelPacket.obj: "$(SRCDIR)\magick_PixelPacket.c"
    $(CPP) $(CPP_PROJ) $?

magick_QuantizeInfo.obj: "$(SRCDIR)\magick_QuantizeInfo.c"
    $(CPP) $(CPP_PROJ) $?

"$(MAGICKBIN))\jmagick.dll" :    "$(OUTDIR)\jmagick.dll"
    copy $(?) "$(MAGICKBIN)"

"$(OUTDIR)\jmagick.dll" : $(LINK32_OBJS)
    $(LINK32) $(LINK32_FLAGS) $(LINK32_OBJSD)
    mt.exe -manifest $@.manifest -outputresource:$@;2 


{$(SRCDIR)}.c{$(INTDIR)}.obj::
    $(CPP) $(CPP_FLAGS) $<


CLEAN :
    -@erase "$(INTDIR)\jmagick.obj"
    -@erase "$(INTDIR)\magick_Magick.obj"
    -@erase "$(INTDIR)\magick_MontageInfo.obj"
    -@erase "$(INTDIR)\magick_DrawInfo.obj"
    -@erase "$(INTDIR)\magick_ImageInfo.obj"
    -@erase "$(INTDIR)\magick_MagickImage.obj"
    -@erase "$(INTDIR)\magick_PixelPacket.obj"
    -@erase "$(INTDIR)\magick_QuantizeInfo.obj"
    -@erase "$(OUTDIR)\jmagick.dll"
    -@erase "$(OUTDIR)\jmagick.exp"
    -@erase "$(OUTDIR)\jmagick.lib"


# The following items are always rebuilt ...
DIRS :
    -mkdir "$(OUTDIR)"
    -mkdir "$(INTDIR)"
    -mkdir "$(GENDIR)"
    -mkdir "$(DOCDIR)"


HEADERS :    $(GENDIR)
    "$(JDKBIN)\javah" -d $(GENDIR) -classpath $(CLSDIR) -jni magick.Magick
    "$(JDKBIN)\javah" -d $(GENDIR) -classpath $(CLSDIR) -jni magick.DrawInfo
    "$(JDKBIN)\javah" -d $(GENDIR) -classpath $(CLSDIR) -jni magick.ImageInfo
    "$(JDKBIN)\javah" -d $(GENDIR) -classpath $(CLSDIR) -jni magick.MagickImage
    "$(JDKBIN)\javah" -d $(GENDIR) -classpath $(CLSDIR) -jni magick.MagickInfo
    "$(JDKBIN)\javah" -d $(GENDIR) -classpath $(CLSDIR) -jni magick.MontageInfo
    "$(JDKBIN)\javah" -d $(GENDIR) -classpath $(CLSDIR) -jni magick.PixelPacket
    "$(JDKBIN)\javah" -d $(GENDIR) -classpath $(CLSDIR) -jni magick.QuantizeInfo

CLASSES :    $(SRCDIR)\*.java $(SRCDIR)\util\*.java
    "$(JDKBIN)\javac" -target 1.5 -d $(CLSDIR) -classpath $(SRCDIR) -sourcepath $(SRCDIR) $(?)
    "$(JDKBIN)\jar" -cvf $(OUTDIR)/jmagick.jar -C $(CLSDIR) magick
    copy "$(OUTDIR)\jmagick.jar" "$(JREEXT)"

DOCS :    $(DOCDIR)
    "$(JDKBIN)\javadoc" -author -version -d $(DOCDIR) \
        -sourcepath $(SRCDIR)/.. magick magick.util
